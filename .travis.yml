language: cpp
dist: trusty

matrix:
  include:
    #    # Linux C++14 Build
    #    - os: linux
    #      compiler: gcc
    #      env: GCC_VERSION=5 BUILD=Debug STANDARD=14 ASAN=OFF TSAN=OFF
    #      addons:
    #        apt:
    #          sources: ['ubuntu-toolchain-r-test']
    #          packages: [g++-5, valgrind, cmake, cmake-data, ninja-build, lcov]
    #
    #    - os: linux
    #      compiler: gcc
    #      env: GCC_VERSION=5 BUILD=Release STANDARD=14 ASAN=OFF TSAN=OFF
    #      addons:
    #        apt:
    #          sources: ['ubuntu-toolchain-r-test']
    #          packages: [g++-5, valgrind, cmake, cmake-data, ninja-build, lcov]
    #
    #    # Linux C++17 Build
    #    - os: linux
    #      compiler: gcc
    #      env: GCC_VERSION=9 BUILD=Debug STANDARD=17 ASAN=OFF TSAN=OFF
    #      addons:
    #        apt:
    #          sources: ['ubuntu-toolchain-r-test']
    #          packages: [g++-9, valgrind, cmake, cmake-data, ninja-build, lcov]
    #
    #    - os: linux
    #      compiler: gcc
    #      env: GCC_VERSION=9 BUILD=Release STANDARD=17 ASAN=OFF TSAN=OFF
    #      addons:
    #        apt:
    #          sources: ['ubuntu-toolchain-r-test']
    #          packages: [g++-9, valgrind, cmake, cmake-data, ninja-build, lcov]

    # MacOs Clang build C++14 Debug
    - os: osx
      env: BUILD=Debug STANDARD=14 ASAN=OFF TSAN=OFF
      compiler: clang
      addons:
        homebrew:
          packages:
            - ninja

    # MacOs Clang build C++14 Release
    - os: osx
      env: BUILD=Release STANDARD=14 ASAN=OFF TSAN=OFF
      compiler: clang
      addons:
        homebrew:
          packages:
            - ninja

    # MacOs Clang build C++17 with Address Sanitiser
    - os: osx
      osx_image: xcode11.2
      env: BUILD=Debug STANDARD=17 ASAN=ON TSAN=OFF
      compiler: clang
      addons:
        homebrew:
          packages:
            - ninja

    # MacOs Clang build C++17 with Thread Sanitiser
    - os: osx
      osx_image: xcode11.2
      env: BUILD=Release STANDARD=17 ASAN=OFF TSAN=ON
      compiler: clang
      addons:
        homebrew:
          packages:
            - ninja

before_install:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi

  # On MacOs use the default system compiler version
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export CXX="clang++" CC="clang"; fi

  - ${CXX} --version
  - cmake --version

install:
  # Get latest gtest
  - sudo wget https://github.com/google/googletest/archive/release-1.10.0.tar.gz
  - sudo tar xf release-1.10.0.tar.gz
  - cd googletest-release-1.10.0
  - sudo cmake -GNinja -DBUILD_SHARED_LIBS=ON .
  - sudo cmake --build .
  - ls -la
  - sudo cp -a ./googletest/include/gtest /usr/local/include
  - sudo cp -a ./lib/* /usr/local/lib

  # Install codecov
  - sudo pip install codecov

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && cd build
  - |
    cmake .. \
      -GNinja \
      -DCMAKE_BUILD_TYPE=$BUILD \
      -DCMAKE_CXX_STANDARD=$STANDARD \
      -DQUILL_SANITIZE_ADDRESS=$ASAN \
      -DQUILL_SANITIZE_THREAD=$TSAN \
      -DQUILL_BUILD_TESTS=ON \
      -DQUILL_BUILD_EXAMPLES=ON
  - cmake --build .
  - ctest --verbose

branches:
  only:
    - master

notifications:
  email: false